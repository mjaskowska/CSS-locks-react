{"version":3,"sources":["components/utils.js","components/validation.js","components/MoreInfo.jsx","components/CalcContext.js","components/ResultField.jsx","components/Calculator.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["CONSTANTS","Object","freeze","MAX_SIZE","MIN_SIZE","MIN_WIDTH","MAX_WIDTH","REQUIRED_MESSAGE","FIELD_TYPE_NUMBER","FIELD_TYPE_TEXT","VALUE_PLACEHOLDER","BUTTONS","SUBMIT","BUTTON","RESET","validationSchema","yup","shape","required","MoreInfo","showMoreInfo","setShowMoreInfo","className","onClick","CalcContext","createContext","CalcProvider","children","useState","minValueRem","setMinValueRem","valueDifference","setValueDifference","bValue","setBValue","mValuevw","setMValuevw","minWidth","setMinWidth","maxWidth","setMaxWidth","allInfo","calculateLock","minSize","maxSize","mValue","Math","round","Number","EPSILON","showResult","setShowResult","Provider","value","ResultField","useContext","Calculator","initialValues","validateOnChange","validateOnMount","onSubmit","values","onReset","errors","handleChange","type","id","name","min","onChange","placeholder","Footer","target","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.797bad71.chunk.js","sourcesContent":["export const CONSTANTS = Object.freeze({\r\n    MAX_SIZE: \"maxSize\",\r\n    MIN_SIZE: \"minSize\",\r\n    MIN_WIDTH: \"minWidth\",\r\n    MAX_WIDTH: \"maxWidth\",\r\n    REQUIRED_MESSAGE: \"Enter a valid positive number. \",\r\n    FIELD_TYPE_NUMBER: \"number\",\r\n    FIELD_TYPE_TEXT: \"text\",\r\n    VALUE_PLACEHOLDER: \"Value (px)\",\r\n    \r\n})\r\n\r\nexport const BUTTONS = Object.freeze({\r\n    SUBMIT: \"submit\",\r\n    BUTTON: \"button\",\r\n    RESET: \"reset\",\r\n})","import * as yup from \"yup\";\r\n\r\nimport { CONSTANTS } from \"./utils\";\r\n\r\nexport const validationSchema = () => {\r\n    return yup.object().shape({\r\n            [CONSTANTS.MAX_SIZE]: yup.string().required(CONSTANTS.REQUIRED_MESSAGE),\r\n            [CONSTANTS.MIN_SIZE]: yup.string().required(CONSTANTS.REQUIRED_MESSAGE),\r\n            [CONSTANTS.MAX_WIDTH]: yup.string().required(CONSTANTS.REQUIRED_MESSAGE),\r\n            [CONSTANTS.MIN_WIDTH]: yup.string().required(CONSTANTS.REQUIRED_MESSAGE),\r\n    });\r\n}","import React from \"react\";\r\n\r\nconst MoreInfo = ({showMoreInfo, setShowMoreInfo}) => {\r\n  return (\r\n      <section className=\"message\">    \r\n        \r\n    <div className=\"message-field\">\r\n    <button onClick={()=>setShowMoreInfo(!showMoreInfo)} className=\"btn close-btn\">X</button>\r\n      <p>\r\n        Have you always wanted to implement responsive font sizes in your\r\n        projects but never knew how to calculate CSS locks?\r\n      </p>\r\n      <p>\r\n        Fear no more! This app will handle all that complicated math for you!\r\n        <i className=\"fas fa-smile-wink\"></i>\r\n      </p>\r\n      <p>\r\n        Simply specify values of minimum and maximum font-size property that you\r\n        want to have on two breakpoints (media queries) and paste generated calc() functions\r\n        straight into your CSS or SASS file.\r\n      </p>\r\n      <p><b>Easy!</b></p>\r\n    </div>\r\n    \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoreInfo;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const CalcContext = createContext();\r\n\r\nexport const CalcProvider = ({ children }) => {\r\n  const [minValueRem, setMinValueRem] = useState();\r\n  const [valueDifference, setValueDifference] = useState();\r\n  const [bValue, setBValue] = useState();\r\n  const [mValuevw, setMValuevw] = useState();\r\n  const [minWidth, setMinWidth] = useState()\r\n  const [maxWidth, setMaxWidth] = useState()\r\n\r\n  const [showResult, setShowResult] = useState(false)\r\n\r\n  const calculateLock = ({minSize, minWidth, maxSize, maxWidth}) => {\r\n    const minValueRem = minSize / 16\r\n    const mValue = (maxSize - minSize) / (maxWidth - minWidth)\r\n    const valueDifference = maxSize - minSize;\r\n    const bValue = Math.round((0 - mValue * minWidth + Number.EPSILON) * 1000) / 1000;\r\n    const mValuevw = Math.round((mValue * 100 + Number.EPSILON) * 1000) / 1000;\r\n\r\n    setMinValueRem(minValueRem)\r\n    setValueDifference(valueDifference)\r\n    setBValue(bValue)\r\n    setMValuevw(mValuevw)\r\n    setMinWidth(minWidth)\r\n    setMaxWidth(maxWidth)\r\n  }\r\n\r\n  const allInfo = {\r\n    calculateLock,\r\n    minValueRem,\r\n    valueDifference, \r\n    bValue,\r\n    mValuevw,\r\n    showResult,\r\n    setShowResult,\r\n    minWidth,\r\n    maxWidth\r\n  }\r\n \r\n  return (\r\n    <CalcContext.Provider value={allInfo} >\r\n      {children}\r\n    </CalcContext.Provider>\r\n  );\r\n}; \r\n","import React, { useContext } from \"react\";\r\n\r\nimport { CalcContext } from \"./CalcContext\";\r\n\r\nconst ResultField = () => {\r\n  const { minWidth, maxWidth, minValueRem, valueDifference, bValue, mValuevw } =\r\n    useContext(CalcContext);\r\n\r\n  return (\r\n    <section className=\"result-field\">\r\n      <h3 className=\"mid-title\">Copy and paste into your project:</h3>\r\n      <div className=\"code-output\">\r\n        <code>\r\n          element {\"{\"} font-size: {minValueRem}rem; {\"}\"}\r\n        </code>\r\n        <code>\r\n          @media (min-width: {minWidth}px){\"{\"} font-size: calc({minValueRem}rem\r\n          + {mValuevw}vw + {bValue}px); {\"}\"}\r\n        </code>\r\n        <code>\r\n          @media (min-width: {maxWidth}px){\"{\"} font-size: calc({minValueRem}rem\r\n          +{valueDifference}px); {\"}\"}\r\n        </code>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ResultField;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport { validationSchema } from \"./validation\";\r\n\r\nimport MoreInfo from \"./MoreInfo\";\r\nimport { CalcContext } from \"./CalcContext\";\r\nimport { CONSTANTS, BUTTONS } from \"./utils\";\r\nimport ResultField from \"./ResultField\";\r\n\r\nconst Calculator = () => {\r\n  const { calculateLock } = useContext(CalcContext);\r\n  const [showMoreInfo, setShowMoreInfo] = useState(false);\r\n  const [showResult, setShowResult] = useState(false)\r\n  return (\r\n    <Formik\r\n      {...{\r\n        initialValues: { maxSize: 0, minSize: 0, maxWidth: 0, minWidth: 0 },\r\n        validateOnChange: true,\r\n        validateOnMount: true,\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n          calculateLock(values);\r\n          setShowResult(true);\r\n        },\r\n        onReset: (values) => values,\r\n      }}\r\n    >\r\n      {({ values, errors, handleChange }) => (\r\n        <section className=\"calculator-container\">\r\n          <h1 className=\"main-title\">CSS Locks Generator</h1>\r\n          <button\r\n            {...{\r\n              type: \"button\",\r\n              className: \"btn more-info-btn\",\r\n              onClick: () => setShowMoreInfo(!showMoreInfo),\r\n            }}\r\n          >\r\n            How does it work?\r\n          </button>\r\n          {showMoreInfo && <MoreInfo {...{showMoreInfo, setShowMoreInfo}} />}\r\n          <Form>\r\n            <h3 className=\"mid-title\">Lower breakpoint</h3>\r\n            <section className=\"form-container\">\r\n              <div className=\"form-control\">\r\n                <label>Min font-size (px)</label>          \r\n                <input\r\n                  {...{\r\n                    className: `input-field ${\r\n                      errors[CONSTANTS.MIN_SIZE] && \"invalid\"\r\n                    }`,\r\n                    id: CONSTANTS.MIN_SIZE,\r\n                    name: CONSTANTS.MIN_SIZE,\r\n                    min: 1,\r\n                    type: CONSTANTS.FIELD_TYPE_NUMBER,\r\n                    onChange: handleChange,\r\n                    placeholder: CONSTANTS.VALUE_PLACEHOLDER,\r\n                    value: values[CONSTANTS.MIN_SIZE],\r\n                  }}\r\n                />\r\n                {errors[CONSTANTS.MIN_SIZE] && (\r\n                  <p className=\"validation-msg\">{errors[CONSTANTS.MIN_SIZE]}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Breakpoint (px)</label>\r\n                <input\r\n                  {...{\r\n                    className: `input-field ${\r\n                      errors[CONSTANTS.MIN_WIDTH] && \"invalid\"\r\n                    }`,\r\n                    id: CONSTANTS.MIN_WIDTH,\r\n                    name: CONSTANTS.MIN_WIDTH,\r\n                    min: 1,\r\n                    type: CONSTANTS.FIELD_TYPE_NUMBER,\r\n                    onChange: handleChange,\r\n                    placeholder: CONSTANTS.VALUE_PLACEHOLDER,\r\n                    value: values[CONSTANTS.MIN_WIDTH],\r\n                  }}\r\n                />\r\n                {errors[CONSTANTS.MIN_WIDTH] && (\r\n                  <p className=\"validation-msg\">{errors[CONSTANTS.MIN_WIDTH]}</p>\r\n                )}\r\n              </div>\r\n            </section>\r\n            <h3 className=\"mid-title\">Higher breakpoint</h3>\r\n            <section className=\"form-container\">\r\n              <div className=\"form-control\">\r\n                <label>Max font-size (px)</label>\r\n                <input\r\n                  {...{\r\n                    className: `input-field ${\r\n                      errors[CONSTANTS.MAX_SIZE] && \"invalid\"\r\n                    }`,\r\n                    id: CONSTANTS.MAX_SIZE,\r\n                    placeholder: CONSTANTS.VALUE_PLACEHOLDER,\r\n                    name: CONSTANTS.MAX_SIZE,\r\n                    min: 1,\r\n                    type: CONSTANTS.FIELD_TYPE_NUMBER,\r\n                    onChange: handleChange,\r\n                    value: values[CONSTANTS.MAX_SIZE],\r\n                  }}\r\n                />\r\n                {errors[CONSTANTS.MAX_SIZE] && (\r\n                  <p className=\"validation-msg\">{errors[CONSTANTS.MAX_SIZE]}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label>Breakpoint (px)</label>\r\n                <input\r\n                  {...{\r\n                    className: `input-field ${\r\n                      errors[CONSTANTS.MAX_WIDTH] && \"invalid\"\r\n                    }`,\r\n                    id: CONSTANTS.MAX_WIDTH,\r\n                    name: CONSTANTS.MAX_WIDTH,\r\n                    min: 1,\r\n                    type: CONSTANTS.FIELD_TYPE_NUMBER,\r\n                    onChange: handleChange,\r\n                    placeholder: CONSTANTS.VALUE_PLACEHOLDER,\r\n                    value: values[CONSTANTS.MAX_WIDTH],\r\n                  }}\r\n                />\r\n                {errors[CONSTANTS.MAX_WIDTH] && (\r\n                  <p className=\"validation-msg\">{errors[CONSTANTS.MAX_WIDTH]}</p>\r\n                )}\r\n              </div>\r\n            </section>\r\n\r\n            <button {...{ \r\n                className: \"btn submit-btn\",\r\n                type: BUTTONS.SUBMIT }}>Calculate</button>\r\n            <button {...{\r\n                className: \"btn reset-btn\",\r\n                type: BUTTONS.RESET }}>Reset</button>\r\n          </Form>\r\n          {showResult && <ResultField/>}\r\n        </section>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>by Magda 2021</p>\r\n            <p>See more: <a target=\"blank\" href=\"https://mjaskowska.github.io/portfolio/\">Portfolio</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\n\r\nimport Calculator from \"./components/Calculator.jsx\"\r\nimport Footer from \"./components/Footer\"\r\nimport { CalcProvider } from \"./components/CalcContext\";\r\n\r\nimport \"./components/styles/_index.scss\"\r\n\r\nfunction App() {\r\n  return (\r\n    <CalcProvider>\r\n      <Calculator />      \r\n      <Footer />    \r\n    </CalcProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n  // const wrapper = useRef(null);\r\n  // useEffect(()=> {\r\n  //   const sections = wrapper.current.children\r\n  //   const tl = gsap.timeline({defaults: {ease: 'power3.inOut'}})\r\n  //   tl.fromTo([sections], {autoAlpha: 0, scale: 0.97 }, {duration: 1, autoAlpha: 1, scale: 1})\r\n  // })","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}