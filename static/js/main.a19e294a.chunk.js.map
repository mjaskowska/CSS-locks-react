{"version":3,"sources":["components/Description.js","components/CalcContext.js","components/Inputs.js","components/ResultField.js","components/Buttons.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Description","className","CalcContext","createContext","CalcProvider","children","useState","minValue","setMinValue","minWidth","setMinWidth","maxValue","setMaxValue","maxWidth","setMaxWidth","minValueRem","setMinValueRem","valueDifference","setValueDifference","bValue","setBValue","mValuevw","setMValuevw","allInfo","calculateLock","mValue","Math","round","Number","EPSILON","Provider","value","Inputs","useContext","placeholder","type","onChange","e","target","required","ResultField","Buttons","onClick","preventDefault","Calculator","App","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a19e294a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Description = () => {\r\n    return (\r\n        <div>\r\n            <p className=\"description\">How does it work?</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Description\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const CalcContext = createContext();\r\n\r\nexport const CalcProvider = ({ children }) => {\r\n\r\n  const [minValue, setMinValue] = useState(\"\")\r\n  const [minWidth, setMinWidth] = useState(\"\")\r\n  const [maxValue, setMaxValue] = useState(\"\")\r\n  const [maxWidth, setMaxWidth] = useState(\"\")\r\n\r\n  const [minValueRem, setMinValueRem] = useState(\"\");\r\n  const [valueDifference, setValueDifference] = useState(\"\");\r\n  const [bValue, setBValue] = useState(\"\");\r\n  const [mValuevw, setMValuevw] = useState(\"\");\r\n\r\n  const calculateLock = (minValue, minWidth, maxValue, maxWidth) => {\r\n    const minValueRem = minValue / 16\r\n    const mValue = (maxValue - minValue) / (maxWidth - minWidth)\r\n    const valueDifference = maxValue - minValue;\r\n    const bValue = Math.round((0 - mValue * minWidth + Number.EPSILON) * 1000) / 1000;\r\n    const mValuevw = Math.round((mValue * 100 + Number.EPSILON) * 1000) / 1000;\r\n\r\n    setMinValueRem(minValueRem)\r\n    setValueDifference(valueDifference)\r\n    setBValue(bValue)\r\n    setMValuevw(mValuevw)\r\n  }\r\n  //  console.log(minValueRem, valueDifference, bValue, mValuevw, 'from context locks vars')\r\n\r\n\r\n  const allInfo = {\r\n    minValue,\r\n    setMinValue,\r\n    minWidth,\r\n    setMinWidth,\r\n    maxValue,\r\n    setMaxValue,\r\n    maxWidth,\r\n    setMaxWidth,\r\n    calculateLock,\r\n    minValueRem,\r\n    valueDifference, \r\n    bValue,\r\n    mValuevw,\r\n  }\r\n \r\n  // console.log(minValue, minWidth, maxValue, maxWidth, 'from context')\r\n\r\n  return (\r\n    <CalcContext.Provider value={allInfo} >\r\n      {children}\r\n    </CalcContext.Provider>\r\n  );\r\n}; \r\n","import React, { useContext } from \"react\";\r\nimport { CalcContext } from \"./CalcContext\";\r\n\r\n\r\nconst Inputs = () => {\r\n\r\n const {minValue, setMinValue, minWidth, setMinWidth, maxValue, setMaxValue, maxWidth, setMaxWidth} = useContext(CalcContext)\r\n//  console.log(minValue, minWidth, maxValue, maxWidth, 'from inputs under all info object')\r\n \r\n  const updateMinValue = (e) => {\r\n    setMinValue(e.target.value)\r\n  }\r\n  const updateMinWidth = (e) => {\r\n    setMinWidth(e.target.value)\r\n  }\r\n  const updateMaxValue = (e) => {\r\n    setMaxValue(e.target.value)\r\n  }\r\n  const updateMaxWidth = (e) => {\r\n    setMaxWidth(e.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"breakpoint-title\">Lower breakpoint</h3>\r\n      <div className=\"input-container\">\r\n        <label>Enter font size (px)</label>\r\n        <input placeholder=\"value(px)\" type=\"text\" value={minValue} onChange={updateMinValue} required></input>\r\n        <label>Enter breakpoint width (px)</label>\r\n        <input placeholder=\"at width(px)\" type=\"text\" value={minWidth} onChange={updateMinWidth} required></input>\r\n      </div>\r\n      <h3 className=\"breakpoint-title\">Higher breakpoint</h3>\r\n      <div className=\"input-container\">\r\n        <label>Enter font size (px)</label>\r\n        <input placeholder=\"value(px)\" type=\"text\" value={maxValue} onChange={updateMaxValue} required></input>\r\n        <label>Enter breakpoint width (px)</label>\r\n        <input placeholder=\"at width(px)\" type=\"text\" value={maxWidth} onChange={updateMaxWidth} required></input>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inputs;\r\n","import React, {useContext} from 'react'\r\nimport { CalcContext } from \"./CalcContext\";\r\nimport './ResultField.css'\r\n\r\nconst ResultField = () => {\r\n    \r\n    const { minWidth, maxWidth, minValueRem, valueDifference, bValue, mValuevw } = useContext(CalcContext)\r\n    \r\n\r\n    return (\r\n     <>\r\n       <h4>Paste into your project: </h4>\r\n            <div className = \"result-container\">\r\n            <p>font-size: {minValueRem}rem;</p> \r\n                <p>@media (min-width: {minWidth}px) font-size: calc({minValueRem}rem + {mValuevw}vw + {bValue}px);</p>\r\n                <p>@media (min-width: {maxWidth}px) font-size: calc({minValueRem}rem + {valueDifference}px);</p>\r\n    \r\n            </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ResultField\r\n","import React, {useContext} from \"react\";\r\nimport { CalcContext } from \"./CalcContext\";\r\n\r\nconst Buttons = () => {\r\n\r\n  const {minValue, maxValue, minWidth, maxWidth, setMinValue, setMinWidth, setMaxValue, setMaxWidth, calculateLock} = useContext(CalcContext)\r\n \r\n\r\n  const resetLock = (e) => {\r\n    e.preventDefault();\r\n    setMinValue(\"\");\r\n    setMaxValue(\"\");\r\n    setMinWidth(\"\");\r\n    setMaxWidth(\"\");\r\n  };\r\n\r\n  const generateLock = (e) => {\r\n    e.preventDefault();\r\n    calculateLock(minValue, minWidth, maxValue, maxWidth)\r\n  };\r\n\r\n  return (\r\n    <div className=\"button-container\">\r\n      <button onClick={generateLock}>Calculate</button>\r\n      <button onClick={resetLock}>Reset</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport \"./Calculator.css\";\r\nimport Inputs from \"./Inputs\";\r\nimport ResultField from \"./ResultField\";\r\nimport { CalcProvider } from \"./CalcContext\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst Calculator = () => {\r\n\r\n  return (\r\n    <CalcProvider>\r\n      <Inputs/>\r\n      <Buttons />\r\n      <ResultField />\r\n\r\n    </CalcProvider>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import './App.css';\r\nimport Description from './components/Description';\r\nimport Calculator from './components/Calculator';\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\"> CSS Locks Generator</h1>\r\n      <Description />\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}