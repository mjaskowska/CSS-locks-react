{"version":3,"sources":["components/Message.js","components/Description.js","components/CalcContext.js","components/Inputs.js","components/ResultField.js","components/Buttons.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Message","messageField","useRef","useEffect","message","current","children","gsap","timeline","defaults","ease","fromTo","autoAlpha","y","scale","duration","className","ref","Description","useState","showMessage","setShowMessage","onClick","CalcContext","createContext","CalcProvider","minValue","setMinValue","minWidth","setMinWidth","maxValue","setMaxValue","maxWidth","setMaxWidth","minValueRem","setMinValueRem","valueDifference","setValueDifference","bValue","setBValue","mValuevw","setMValuevw","allInfo","calculateLock","mValue","Math","round","Number","EPSILON","showResult","setShowResult","Provider","value","Inputs","useContext","placeholder","type","onChange","e","target","required","ResultField","resultStyle","display","resultContainer","resultCode","transformOrigin","style","Buttons","preventDefault","alert","Calculator","App","wrapper","sections","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15afcbb6.chunk.js","sourcesContent":["import React, {useRef, useEffect} from 'react'\r\nimport './description.css';\r\nimport gsap from 'gsap'\r\n\r\nconst Message = () => {\r\n    const messageField = useRef(null)\r\n\r\n    useEffect(()=> {\r\n\r\n        const message = messageField.current.children\r\n    \r\n        const tl = gsap.timeline({defaults: {ease: 'power3.inOut'}})\r\n    \r\n        tl.fromTo(message, {autoAlpha: 0.2, y: '-=5', scale: 0.98}, {duration: 1, autoAlpha: 1, y: '+=5', scale: 1})\r\n      })\r\n\r\n    return (\r\n        \r\n        <div className=\"message-field\" ref={messageField}>\r\n            <p>Have you always wanted to implement responsive font sizes in your projects but never knew how to calculate CSS locks?</p>\r\n            \r\n            <p>Fear no more! This app will handle all that complicated math for you! <i className=\"fas fa-smile-wink\"></i> </p>\r\n            \r\n            <p>Simply specify values of minimum and maximum font-size property that you want on your two breakpoints (media queries) and paste the code below straight into your SASS/CSS file. </p>\r\n            <p className=\"bold\">Easy!</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, {useState} from 'react'\r\nimport Message from './Message'\r\nimport './description.css';\r\n\r\n\r\n\r\nconst Description = () => {\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    const toggleMessage = () => setShowMessage(!showMessage)\r\n\r\n    \r\n    return (\r\n        <div className=\"description-container\">\r\n            \r\n            <button onClick={toggleMessage} className=\"message-btn\">How does it work?</button>\r\n            <div>{showMessage &&  <Message />}</div>\r\n            \r\n        </div>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default Description\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const CalcContext = createContext();\r\n\r\nexport const CalcProvider = ({ children }) => {\r\n\r\n  const [minValue, setMinValue] = useState(\"\")\r\n  const [minWidth, setMinWidth] = useState(\"\")\r\n  const [maxValue, setMaxValue] = useState(\"\")\r\n  const [maxWidth, setMaxWidth] = useState(\"\")\r\n\r\n  const [minValueRem, setMinValueRem] = useState(\"\");\r\n  const [valueDifference, setValueDifference] = useState(\"\");\r\n  const [bValue, setBValue] = useState(\"\");\r\n  const [mValuevw, setMValuevw] = useState(\"\");\r\n\r\n  const [showResult, setShowResult] = useState(false)\r\n\r\n  const calculateLock = (minValue, minWidth, maxValue, maxWidth) => {\r\n    const minValueRem = minValue / 16\r\n    const mValue = (maxValue - minValue) / (maxWidth - minWidth)\r\n    const valueDifference = maxValue - minValue;\r\n    const bValue = Math.round((0 - mValue * minWidth + Number.EPSILON) * 1000) / 1000;\r\n    const mValuevw = Math.round((mValue * 100 + Number.EPSILON) * 1000) / 1000;\r\n\r\n    setMinValueRem(minValueRem)\r\n    setValueDifference(valueDifference)\r\n    setBValue(bValue)\r\n    setMValuevw(mValuevw)\r\n  }\r\n\r\n\r\n  const allInfo = {\r\n    minValue,\r\n    setMinValue,\r\n    minWidth,\r\n    setMinWidth,\r\n    maxValue,\r\n    setMaxValue,\r\n    maxWidth,\r\n    setMaxWidth,\r\n    calculateLock,\r\n    minValueRem,\r\n    valueDifference, \r\n    bValue,\r\n    mValuevw,\r\n    showResult,\r\n    setShowResult\r\n  }\r\n \r\n\r\n  return (\r\n    <CalcContext.Provider value={allInfo} >\r\n      {children}\r\n    </CalcContext.Provider>\r\n  );\r\n}; \r\n","import React, { useContext } from \"react\";\r\nimport { CalcContext } from \"./CalcContext\";\r\n\r\n\r\nconst Inputs = () => {\r\n\r\n const {minValue, setMinValue, minWidth, setMinWidth, maxValue, setMaxValue, maxWidth, setMaxWidth} = useContext(CalcContext)\r\n\r\n \r\n  const updateMinValue = (e) => {\r\n    setMinValue(e.target.value)\r\n  }\r\n  const updateMinWidth = (e) => {\r\n    setMinWidth(e.target.value)\r\n  }\r\n  const updateMaxValue = (e) => {\r\n    setMaxValue(e.target.value)\r\n  }\r\n  const updateMaxWidth = (e) => {\r\n    setMaxWidth(e.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"breakpoint-title\">Lower breakpoint</h3>\r\n      <div className=\"input-container\">\r\n        <label>Enter font size (px)</label>\r\n        <input placeholder=\"value(px)\" type=\"text\" value={minValue} onChange={updateMinValue} required></input>\r\n        <label>Enter breakpoint width (px)</label>\r\n        <input placeholder=\"at width(px)\" type=\"text\" value={minWidth} onChange={updateMinWidth} required></input>\r\n      </div>\r\n      <h3 className=\"breakpoint-title\">Higher breakpoint</h3>\r\n      <div className=\"input-container\">\r\n        <label>Enter font size (px)</label>\r\n        <input placeholder=\"value(px)\" type=\"text\" value={maxValue} onChange={updateMaxValue} required></input>\r\n        <label>Enter breakpoint width (px)</label>\r\n        <input placeholder=\"at width(px)\" type=\"text\" value={maxWidth} onChange={updateMaxWidth} required></input>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inputs;\r\n","import React, {useContext, useRef, useEffect} from 'react'\r\nimport { CalcContext } from \"./CalcContext\";\r\nimport gsap from 'gsap'\r\nimport './ResultField.css'\r\n\r\nconst ResultField = () => {\r\n    \r\n    const { showResult} = useContext(CalcContext)\r\n    const { minWidth, maxWidth, minValueRem, valueDifference, bValue, mValuevw} = useContext(CalcContext)\r\n\r\n    const resultStyle = {\r\n        display: showResult ? \"inherit\" : \"none\"\r\n    }\r\n\r\n    const resultContainer = useRef(null)\r\n    \r\n\r\n    useEffect(()=> {\r\n        const resultCode = resultContainer.current.children\r\n        \r\n\r\n        const tl = gsap.timeline({defaults: {ease: 'power3.inOut'}})\r\n\r\n\r\n        tl.fromTo(resultCode, {autoAlpha: 0.2, scale: 0.95 }, {duration: 1, autoAlpha: 1, scale: 1, transformOrigin: '0% 50%'})\r\n       \r\n\r\n    })\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h4>Paste into your project: </h4>\r\n        <div className = \"result-container\">\r\n            <div style={resultStyle} ref={resultContainer}>\r\n                <p>font-size: {minValueRem}rem;</p> \r\n                <p>@media (min-width: {minWidth}px) font-size: calc({minValueRem}rem + {mValuevw}vw + {bValue}px);</p>\r\n                <p>@media (min-width: {maxWidth}px) font-size: calc({minValueRem}rem + {valueDifference}px);</p>\r\n\r\n            </div>\r\n        </div>\r\n        </>\r\n       \r\n    \r\n    )\r\n}\r\n\r\nexport default ResultField\r\n","import React, {useContext} from \"react\";\r\nimport { CalcContext } from \"./CalcContext\";\r\n\r\nconst Buttons = () => {\r\n\r\n  const {minValue, maxValue, minWidth, maxWidth, setMinValue, setMinWidth, setMaxValue, setMaxWidth, calculateLock, setShowResult} = useContext(CalcContext)\r\n  \r\n\r\n  const resetLock = (e) => {\r\n    e.preventDefault();\r\n    setMinValue(\"\");\r\n    setMaxValue(\"\");\r\n    setMinWidth(\"\");\r\n    setMaxWidth(\"\");\r\n    setShowResult(false)\r\n  };\r\n\r\n  const generateLock = (e) => {\r\n    e.preventDefault();\r\n    if (minValue === \"\" || maxValue === \"\" || minWidth === \"\" || maxWidth === \"\") {\r\n      alert(\"Please fill all the fields.\")\r\n    }\r\n    else {\r\n      calculateLock(minValue, minWidth, maxValue, maxWidth)\r\n     setShowResult(true)\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n   \r\n    <div className=\"button-container\" >\r\n      <button onClick={generateLock}>Calculate</button>\r\n      <button onClick={resetLock}>Reset</button>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport \"./Calculator.css\";\r\nimport Inputs from \"./Inputs\";\r\nimport ResultField from \"./ResultField\";\r\nimport { CalcProvider } from \"./CalcContext\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst Calculator = () => {\r\n\r\n  return (\r\n    <CalcProvider>\r\n      <Inputs/>\r\n      <Buttons />\r\n      <ResultField />\r\n\r\n    </CalcProvider>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import './App.css';\r\nimport React, {useRef, useEffect} from 'react'\r\nimport gsap from 'gsap'\r\nimport Description from './components/Description';\r\nimport Calculator from './components/Calculator';\r\n\r\n\r\nfunction App() {\r\n\r\n  const wrapper = useRef(null)\r\n\r\n  useEffect(()=> {\r\n\r\n    const sections = wrapper.current.children\r\n\r\n    const tl = gsap.timeline({defaults: {ease: 'power3.inOut'}})\r\n\r\n    tl.fromTo([sections], {autoAlpha: 0, scale: 0.97 }, {duration: 1, autoAlpha: 1, scale: 1})\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\" ref={wrapper}>\r\n      <h1 className=\"title\"> CSS Locks Generator</h1>\r\n      <Description />\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}